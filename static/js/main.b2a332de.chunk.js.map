{"version":3,"sources":["components/Projects/components/ProjectCard.jsx","components/Projects/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["GitHubProjectCard","props","className","name","description","GitHubProjects","state","repoData","axios","get","responseData","this","setState","data","projectCards","map","repo","index","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAYeA,G,MAVW,SAAAC,GAEtB,OACI,sBAAKC,UAAU,cAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BD,EAAME,OACnC,mBAAGD,UAAU,qBAAb,SAAmCD,EAAMG,mBCuCtCC,G,wDAvCX,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IAEDK,MAAQ,CACTC,SAAU,IAJC,E,gMAUYC,IAAMC,IAAI,kD,OAA/BC,E,OACNC,KAAKC,SAAS,CAAEL,SAAUG,EAAaG,O,qIAKvC,IAAMC,EAAeH,KAAKL,MAAMC,SAASQ,KAAI,SAACC,EAAMC,GAMhD,OAJyB,OAArBD,EAAKZ,cACLY,EAAKZ,YAAc,kBAInB,cAAC,EAAD,CAEID,KAAMa,EAAKb,KACXC,YAAaY,EAAKZ,aAFba,MAMjB,OACI,qBAAKf,UAAU,uBAAf,SACKY,Q,GAlCYI,cCMdC,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2a332de.chunk.js","sourcesContent":["import './ProjectCard.css';\r\n\r\nconst GitHubProjectCard = props => {\r\n\r\n    return (\r\n        <div className=\"projectCard\">\r\n            <h1 className=\"projectName\">{props.name}</h1>\r\n            <p className=\"projectDescription\">{props.description}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GitHubProjectCard;","import axios from 'axios';\r\nimport GitHubProjectCard from './components/ProjectCard';\r\nimport './Projects.css';\r\nimport { Component } from 'react';\r\n\r\nclass GitHubProjects extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            repoData: []\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const responseData = await axios.get('https://api.github.com/users/dylanbarber/repos');\r\n        this.setState({ repoData: responseData.data });\r\n    }\r\n\r\n    render() {\r\n\r\n        const projectCards = this.state.repoData.map((repo, index) => {\r\n\r\n            if (repo.description === null) {\r\n                repo.description = 'No Description';\r\n            }\r\n\r\n            return (\r\n                <GitHubProjectCard\r\n                    key={index}\r\n                    name={repo.name}\r\n                    description={repo.description}\r\n                />)\r\n        });\r\n\r\n        return (\r\n            <div className='projectCardContainer'>\r\n                {projectCards}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default GitHubProjects;","import './App.css';\r\nimport GitHubProjects from './components/Projects/Projects';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GitHubProjects />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}